// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TestProtoBufProtocol.proto

#include "TestProtoBufProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace TestProtoBufProtocol {
constexpr CS_LOGIN_REQ::CS_LOGIN_REQ(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CS_LOGIN_REQDefaultTypeInternal {
  constexpr CS_LOGIN_REQDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CS_LOGIN_REQDefaultTypeInternal() {}
  union {
    CS_LOGIN_REQ _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CS_LOGIN_REQDefaultTypeInternal _CS_LOGIN_REQ_default_instance_;
constexpr SC_LOING_RES::SC_LOING_RES(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sessionindex_(uint64_t{0u}){}
struct SC_LOING_RESDefaultTypeInternal {
  constexpr SC_LOING_RESDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SC_LOING_RESDefaultTypeInternal() {}
  union {
    SC_LOING_RES _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SC_LOING_RESDefaultTypeInternal _SC_LOING_RES_default_instance_;
}  // namespace TestProtoBufProtocol
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_TestProtoBufProtocol_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_TestProtoBufProtocol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_TestProtoBufProtocol_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_TestProtoBufProtocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TestProtoBufProtocol::CS_LOGIN_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TestProtoBufProtocol::SC_LOING_RES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TestProtoBufProtocol::SC_LOING_RES, sessionindex_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::TestProtoBufProtocol::CS_LOGIN_REQ)},
  { 6, -1, -1, sizeof(::TestProtoBufProtocol::SC_LOING_RES)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TestProtoBufProtocol::_CS_LOGIN_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TestProtoBufProtocol::_SC_LOING_RES_default_instance_),
};

const char descriptor_table_protodef_TestProtoBufProtocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032TestProtoBufProtocol.proto\022\024TestProtoB"
  "ufProtocol\"\016\n\014CS_LOGIN_REQ\"$\n\014SC_LOING_R"
  "ES\022\024\n\014sessionIndex\030\001 \001(\004b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_TestProtoBufProtocol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TestProtoBufProtocol_2eproto = {
  false, false, 112, descriptor_table_protodef_TestProtoBufProtocol_2eproto, "TestProtoBufProtocol.proto", 
  &descriptor_table_TestProtoBufProtocol_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_TestProtoBufProtocol_2eproto::offsets,
  file_level_metadata_TestProtoBufProtocol_2eproto, file_level_enum_descriptors_TestProtoBufProtocol_2eproto, file_level_service_descriptors_TestProtoBufProtocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_TestProtoBufProtocol_2eproto_getter() {
  return &descriptor_table_TestProtoBufProtocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_TestProtoBufProtocol_2eproto(&descriptor_table_TestProtoBufProtocol_2eproto);
namespace TestProtoBufProtocol {

// ===================================================================

class CS_LOGIN_REQ::_Internal {
 public:
};

CS_LOGIN_REQ::CS_LOGIN_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:TestProtoBufProtocol.CS_LOGIN_REQ)
}
CS_LOGIN_REQ::CS_LOGIN_REQ(const CS_LOGIN_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TestProtoBufProtocol.CS_LOGIN_REQ)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CS_LOGIN_REQ::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CS_LOGIN_REQ::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CS_LOGIN_REQ::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TestProtoBufProtocol_2eproto_getter, &descriptor_table_TestProtoBufProtocol_2eproto_once,
      file_level_metadata_TestProtoBufProtocol_2eproto[0]);
}

// ===================================================================

class SC_LOING_RES::_Internal {
 public:
};

SC_LOING_RES::SC_LOING_RES(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TestProtoBufProtocol.SC_LOING_RES)
}
SC_LOING_RES::SC_LOING_RES(const SC_LOING_RES& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sessionindex_ = from.sessionindex_;
  // @@protoc_insertion_point(copy_constructor:TestProtoBufProtocol.SC_LOING_RES)
}

void SC_LOING_RES::SharedCtor() {
sessionindex_ = uint64_t{0u};
}

SC_LOING_RES::~SC_LOING_RES() {
  // @@protoc_insertion_point(destructor:TestProtoBufProtocol.SC_LOING_RES)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SC_LOING_RES::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SC_LOING_RES::ArenaDtor(void* object) {
  SC_LOING_RES* _this = reinterpret_cast< SC_LOING_RES* >(object);
  (void)_this;
}
void SC_LOING_RES::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SC_LOING_RES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SC_LOING_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:TestProtoBufProtocol.SC_LOING_RES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionindex_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SC_LOING_RES::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 sessionIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sessionindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SC_LOING_RES::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestProtoBufProtocol.SC_LOING_RES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionIndex = 1;
  if (this->_internal_sessionindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_sessionindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestProtoBufProtocol.SC_LOING_RES)
  return target;
}

size_t SC_LOING_RES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestProtoBufProtocol.SC_LOING_RES)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sessionIndex = 1;
  if (this->_internal_sessionindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_sessionindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SC_LOING_RES::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SC_LOING_RES::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SC_LOING_RES::GetClassData() const { return &_class_data_; }

void SC_LOING_RES::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SC_LOING_RES *>(to)->MergeFrom(
      static_cast<const SC_LOING_RES &>(from));
}


void SC_LOING_RES::MergeFrom(const SC_LOING_RES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestProtoBufProtocol.SC_LOING_RES)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sessionindex() != 0) {
    _internal_set_sessionindex(from._internal_sessionindex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SC_LOING_RES::CopyFrom(const SC_LOING_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestProtoBufProtocol.SC_LOING_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_LOING_RES::IsInitialized() const {
  return true;
}

void SC_LOING_RES::InternalSwap(SC_LOING_RES* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(sessionindex_, other->sessionindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SC_LOING_RES::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_TestProtoBufProtocol_2eproto_getter, &descriptor_table_TestProtoBufProtocol_2eproto_once,
      file_level_metadata_TestProtoBufProtocol_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace TestProtoBufProtocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TestProtoBufProtocol::CS_LOGIN_REQ* Arena::CreateMaybeMessage< ::TestProtoBufProtocol::CS_LOGIN_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TestProtoBufProtocol::CS_LOGIN_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::TestProtoBufProtocol::SC_LOING_RES* Arena::CreateMaybeMessage< ::TestProtoBufProtocol::SC_LOING_RES >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TestProtoBufProtocol::SC_LOING_RES >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
